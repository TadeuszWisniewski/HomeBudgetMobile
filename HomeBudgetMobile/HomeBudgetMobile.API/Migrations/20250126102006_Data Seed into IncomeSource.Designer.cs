// <auto-generated />
using HomeBudgetMobile.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeBudgetMobile.API.Migrations
{
    [DbContext(typeof(BudgetContext))]
    [Migration("20250126102006_Data Seed into IncomeSource")]
    partial class DataSeedintoIncomeSource
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Expense", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdExpenseSort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdExpenseSort");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.ExpenseSort", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseSort");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Expense_User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdExpense")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdExpense");

                    b.HasIndex("IdUser");

                    b.ToTable("Expense-User");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Income", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdIncomeSource")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIncomeSource");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.IncomeSource", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IncomeSource");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Active = true,
                            Name = "Salary"
                        });
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Saving", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Savings");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.User_Income", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdIncome")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIncome");

                    b.HasIndex("IdUser");

                    b.ToTable("User-Income");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Users_Saving", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSavings")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdSavings");

                    b.HasIndex("IdUser");

                    b.ToTable("Users-Savings");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Expense", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Models.Domain.ExpenseSort", "IdExpenseSortNavigation")
                        .WithMany("Expenses")
                        .HasForeignKey("IdExpenseSort")
                        .IsRequired()
                        .HasConstraintName("FK_Expense_ExpenseSort");

                    b.Navigation("IdExpenseSortNavigation");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Expense_User", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Models.Domain.Expense", "IdExpenseNavigation")
                        .WithMany("Expense_Users")
                        .HasForeignKey("IdExpense")
                        .IsRequired()
                        .HasConstraintName("FK_Expense-User_Expense");

                    b.HasOne("HomeBudgetMobile.API.Models.Domain.User", "IdUserNavigation")
                        .WithMany("Expense_Users")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Expense-User_User");

                    b.Navigation("IdExpenseNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Income", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Models.Domain.IncomeSource", "IdIncomeSourceNavigation")
                        .WithMany("Incomes")
                        .HasForeignKey("IdIncomeSource")
                        .IsRequired()
                        .HasConstraintName("FK_Income_IncomeSource");

                    b.Navigation("IdIncomeSourceNavigation");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.User_Income", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Models.Domain.Income", "IdIncomeNavigation")
                        .WithMany("User_Incomes")
                        .HasForeignKey("IdIncome")
                        .IsRequired()
                        .HasConstraintName("FK_User-Income_Income");

                    b.HasOne("HomeBudgetMobile.API.Models.Domain.User", "IdUserNavigation")
                        .WithMany("User_Incomes")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_User-Income_User");

                    b.Navigation("IdIncomeNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Users_Saving", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Models.Domain.Saving", "IdSavingsNavigation")
                        .WithMany("Users_Savings")
                        .HasForeignKey("IdSavings")
                        .IsRequired()
                        .HasConstraintName("FK_Users-Savings_Savings");

                    b.HasOne("HomeBudgetMobile.API.Models.Domain.User", "IdUserNavigation")
                        .WithMany("Users_Savings")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Users-Savings_User");

                    b.Navigation("IdSavingsNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Expense", b =>
                {
                    b.Navigation("Expense_Users");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.ExpenseSort", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Income", b =>
                {
                    b.Navigation("User_Incomes");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.IncomeSource", b =>
                {
                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.Saving", b =>
                {
                    b.Navigation("Users_Savings");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Models.Domain.User", b =>
                {
                    b.Navigation("Expense_Users");

                    b.Navigation("User_Incomes");

                    b.Navigation("Users_Savings");
                });
#pragma warning restore 612, 618
        }
    }
}
