// <auto-generated />
using System;
using HomeBudgetMobile.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeBudgetMobile.API.Migrations
{
    [DbContext(typeof(HomeBudgetMobileDbContext))]
    [Migration("20250407101420_Update User2")]
    partial class UpdateUser2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExpenseSortId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseSortId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.ExpenseSort", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseSorts");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Goal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsAcive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NeededAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Income", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IncomeSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IncomeSourceId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.IncomeSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomeSources");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Saving", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GoalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GoalId");

                    b.ToTable("Savings");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExpenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IncomeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SavingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("IncomeId");

                    b.HasIndex("SavingId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Expense", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Model.Domain.ExpenseSort", "ExpenseSort")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseSortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseSort");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Income", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Model.Domain.IncomeSource", "IncomeSource")
                        .WithMany("Incomes")
                        .HasForeignKey("IncomeSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomeSource");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Saving", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Model.Domain.Goal", "Goal")
                        .WithMany("Saving")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.User", b =>
                {
                    b.HasOne("HomeBudgetMobile.API.Model.Domain.Expense", null)
                        .WithMany("Users")
                        .HasForeignKey("ExpenseId");

                    b.HasOne("HomeBudgetMobile.API.Model.Domain.Income", null)
                        .WithMany("Users")
                        .HasForeignKey("IncomeId");

                    b.HasOne("HomeBudgetMobile.API.Model.Domain.Saving", null)
                        .WithMany("Users")
                        .HasForeignKey("SavingId");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Expense", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.ExpenseSort", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Goal", b =>
                {
                    b.Navigation("Saving");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Income", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.IncomeSource", b =>
                {
                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("HomeBudgetMobile.API.Model.Domain.Saving", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
